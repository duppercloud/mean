{
  "ports": 
  [
    "8000:8000",
    "35729:35729",
    "9418:9418" 
  ]
  "env":
  [
      "GOROOT=$HOME/go",
      "PATH=$PATH:$GOROOT/bin",
      "GOPATH=$HOME/projects/",
      "PATH=$PATH:$GOPATH/bin",
  ],  
  "dependencies": 
  [
    {
      "name": "apt-packages",
      "cmd":
      '''
        $pkgmgr -y install curl 
        curl -sL https://deb.nodesource.com/setup_4.x | bash -
        $pkgmgr -y install mongodb nodejs daemon
      '''
    },
    {
      "name": "npm-install",
      "cmd":
      '''
        npm install -g bower gulp
        cd ~/mean
        npm install
      ''',
      "watch": "package.json"
    },
    {
      "name": "bower-install",
      "cmd":
      '''
        cd ~/mean
        bower install --allow-root
      ''',
      "watch": "bower.json"
    },
    {
      name: "gut",
      cmd:
      '''
          apt-get update
          apt-get install -y curl vim zlib1g-dev gettext inotify-tools build-essential autoconf
          curl -O https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz
          tar -xvf go1.6.linux-amd64.tar.gz
          go get github.com/dupperinc/gut
          go install github.com/dupperinc/gut
          gut build --build-parallel
      '''
    }
  ],
  commands: {
    deploy: {
      server:
      '''
         set -x
         service mongodb start
         cd ~/mean
         cat >run.sh <<EOM
#!/bin/bash

cd ~/mean
gulp > output
EOM
         chmod a+x run.sh
         PORT=8000 daemon --name mean -P ~/mean ~/mean/run.sh
         set +x
      '''
      client:
      '''
        echo "Waiting for server to start....."
        while [ 1 ]; do
          wget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 --continue $hostname:8000 >/dev/null 2>&1
          if [ $? = 0 ]; then break; fi;
          sleep 5s;
        done;
        open http://$hostname:8000
      '''
    },

    devenv: {
      server:
      '''
        cp ~/mean/.gitignore ~/mean/.gutignore
        ulimit -n 9999
      '''

      client:
       '''
         ssh-add -l &>/dev/null
         if [ "$?" == 2 ]; then
           test -r ~/.ssh-agent && \
           eval "$(<~/.ssh-agent)" >/dev/null

           ssh-add -l &>/dev/null
           if [ "$?" == 2 ]; then
             (umask 066; ssh-agent > ~/.ssh-agent)
             eval "$(<~/.ssh-agent)" >/dev/null
             ssh-add
           fi
         fi
         ssh-add $identityFile
         ulimit -n 9999
         gut sync $user@$hostname:$path $1
       '''
      }
  }
}
