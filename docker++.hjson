{
  "ports": 
  [
    "8000:8000",
    "35729:35729",
    "9418:9418",
    "8080:8080",
    "3000:3000"
  ]
  "env":
  [
      "GOROOT=$HOME/go",
      "PATH=$PATH:$GOROOT/bin",
      "GOPATH=$HOME/projects/",
      "PATH=$PATH:$GOPATH/bin",
  ],  
  "dependencies": 
  [
    {
      "name": "apt-packages",
      "cmd":
      '''
        $pkgmgr -y install curl 
        curl -sL https://deb.nodesource.com/setup | bash -
        $pkgmgr -y install mongodb nodejs daemon
      '''
    },
    {
      "name": "npm-install",
      "cmd":
      '''
        npm install -g bower gulp
        cd ~/mean
        npm install
      ''',
      "watch": "package.json"
    },
    {
      "name": "bower-install",
      "cmd":
      '''
        cd ~/mean
        bower install --allow-root
      ''',
      "watch": "bower.json"
    },
    {
      "name": "supervisor",
      "cmd": 
      '''
        apt-get install -y supervisor 
        rm -rf /var/lib/apt/lists/*
        sed -i 's/^\(\[supervisord\]\)$/\1\nnodaemon=true/' /etc/supervisor/supervisord.conf
        update-rc.d supervisor defaults
        apt-get update | apt-get upgrade -y
        apt-get install libpam-cracklib -y
        ln -s /lib/x86_64-linux-gnu/security/pam_cracklib.so /lib/security
      '''
    },
    {
      "name": "cloud 9",
      "cmd":
      '''
        apt-get install -y build-essential g++ curl libssl-dev apache2-utils libxml2-dev sshfs
        git clone https://github.com/c9/core.git cloud9
        cd cloud9
        scripts/install-sdk.sh
        sed -i -e 's_127.0.0.1_0.0.0.0_g' configs/standalone.js 
        
      '''
    }
  ],
  commands: {
    deploy: {
      server:
      '''
         set -x
         service mongodb start
         cd ~/mean
         cat >run.sh <<EOM
#!/bin/bash

cd ~/mean
gulp > output
EOM
         chmod a+x run.sh
         PORT=8000 daemon --name mean -P ~/mean ~/mean/run.sh
         set +x
      '''
      client:
      '''
        echo "Waiting for server to start....."
        while [ 1 ]; do
          wget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 --continue $hostname:8000 >/dev/null 2>&1
          if [ $? = 0 ]; then break; fi;
          sleep 5s;
        done;
        open http://$hostname:8000
      '''
    },

    c9: {
      server:
      '''
        supervisord -c /etc/supervisor/supervisord.conf
      '''
      client:
       '''
        open http://$hostname:8080
       '''
      }
  }
}
